datasource db {
    provider = "sqlite"
    url      = "file:./db.sqlite"
}

generator client {
    provider = "prisma-client-js"
}

// TODO

model Station {
    id Int @id @default(autoincrement())
}

model MCP {
    id         Int          @id @default(autoincrement())
    location   String
    capacity   Int
    MCPinRoute MCPinRoute[]
    Janitor    Janitor[]
}

model Account {
    id         Int        @id @default(autoincrement())
    first_name String
    last_name  String
    email      String
    phone      String
    pass       String
    Collector  Collector?
    Janitor    Janitor?
}

model Collector {
    id            Int      @id @default(autoincrement())
    name          String
    nearest_depot String
    status        Int
    routeId       Int?     @unique
    route         Route?   @relation(fields: [routeId], references: [id])
    accountId     Int?     @unique
    account       Account? @relation(fields: [accountId], references: [id])
}

model Janitor {
    id          Int      @id @default(autoincrement())
    name        String
    nearest_mcp String
    status      Int
    mpcId       Int?
    mpc         MCP?     @relation(fields: [mpcId], references: [id])
    accountId   Int?     @unique
    account     Account? @relation(fields: [accountId], references: [id])
}

model Depot {
    id        Int       @id @default(autoincrement())
    depotName String    @unique
    location  String
    vehicles  Vehicle[]
    routes    Route[]
}

model Vehicle {
    id      Int    @id @default(autoincrement())
    driver  String
    brand   String
    status  Int
    depotID Int
    depot   Depot  @relation(fields: [depotID], references: [id], onDelete: Cascade)
}

model GTC {
    id       Int     @id @default(autoincrement())
    name     String
    location String
    routes   Route[]
}

model Route {
    id         Int          @id @default(autoincrement())
    name       String       @unique
    depotID    Int
    GTCID      Int
    fromDepot  Depot        @relation(fields: [depotID], references: [id], onDelete: Cascade)
    togtc      GTC          @relation(fields: [GTCID], references: [id], onDelete: Cascade)
    MCPinRoute MCPinRoute[]
    status     String
    Collector  Collector?
}

model MCPinRoute {
    mcpID   Int
    mcp     MCP   @relation(fields: [mcpID], references: [id], onDelete: Cascade)
    routeID Int
    route   Route @relation(fields: [routeID], references: [id], onDelete: Cascade)

    @@id([mcpID, routeID])
}
